#!/usr/bin/ruby

require File.dirname(__FILE__) + '/../lib/amqp-utils/command'

class EnqueueCommand < Command
  def prepare_options(options)
    options.banner %Q{
    |Publishes a message to a particular queue.
    |
    |  enqueue <queue> <message>
    }.margin
    options.opt :persistent, 'Mark messages as persistent.'
    options.opt :count, 'Number of times the message should be published.', :type => :int, :default => 1
  end

  def execute
    @queue = ARGV[0]
    @message = ARGV[1]

    publisher = EM.spawn do |queue, message, messages, options|
      if messages > 0
        @mq ||= MQ.new
        @mq.queue(queue, :durable => true, :auto_delete => false).
          publish(message, :persistent => options.persistent)

        print '.'; STDOUT.flush
        publisher.notify(queue, message, messages - 1)
      else
        EM.next_tick { AMQP.stop { EM.stop } }
      end
    end

    publisher.notify(@queue, @message, options.count, options)
  end
end

EnqueueCommand.run
