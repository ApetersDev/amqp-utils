#!/usr/bin/ruby

require File.dirname(__FILE__) + '/../lib/amqp-utils/command'

class PeekCommand < Command
  def prepare_options(options)
    options.banner %Q{
    |Displays the head of the queue without removing the message from the queue.
    |
    |  peek <queue>
    |
    |  NOTE: This operation does have side effects on the server. The message is
    |        placed at the end of the queue after returning from this method. The
    |        message is also marked as being redelivered.
    }.margin
  end

  def execute
    @queue = args[0]

    mq = MQ.new

    mq.queue(@queue).pop(:ack => true) do |header, message|
      if message
        puts "(#{@queue})"
        puts "  Header: "
        header.properties.each do |key, value|
          puts "    #{key.inspect} => #{value.inspect}"
        end
        puts "  Message: #{message.inspect}"
      else
        puts "(#{@queue}) empty"
      end

      AMQP.stop { EM.stop }
    end
  end
end

PeekCommand.run
